/*
 *
 * By Matt Galligan (https://github.com/galligan)
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../config/keypos_42keys.h"

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJ 3
#define NAV 4
#define MGMT 5

#define ___ &trans
#define XXX &none

/*
   Custom Key Codes
*/

// Key Combos
#define MEH_KEY LS(LA(LCTRL))
#define MEH(key) (LS(LA(LC(key))))
#define HYPER LG(MEH_KEY)
#define HYP(key) (LG(LS(LA(LC(key)))))

// Editing
#define BSPC_W LA(BSPC)

// Tab Navigation
#define T_NEXT LC(TAB)
#define T_PREV LS(LC(TAB))

// History Navigation
#define H_NEXT LG(RBKT)
#define H_PREV LG(LBKT)

// App Navigation
#define A_PREV LG(TAB)
#define A_FULL LA(TAB)

// Window Management
#define WM_MCTRL LC(UP)
#define WM_STAGE LG(LS(LA(LC(M))))
#define WM_FOCUS LG(LS(LA(LC(H))))
#define WM_WIN_L LG(LS(LA(LC(W))))
#define WM_WIN_R LG(LS(LA(LC(R))))
#define WM_WIN_X LG(LS(LA(LC(E))))
#define WM_WIN_H LG(LS(LA(LC(D))))
#define WM_SN_L LG(LS(LA(LC(S))))
#define WM_SN_R LG(LS(LA(LC(F))))
#define WM_ST_L LS(LA(LC(F9)))
#define WM_ST_D LS(LA(LC(F10)))
#define WM_ST_R LS(LA(LC(F11)))
#define WM_ST_UN LS(LA(LC(F12)))
#define WM_3RD LS(LA(LC(F16)))
#define WM_4TH LS(LA(LC(F17)))
#define WM_GROW LG(LS(LA(LC(F11)))) 
#define WM_SHRK LG(LS(LA(LC(F12))))
#define WM_NG_L LG(LS(LA(LC(F16))))
#define WM_NG_R LG(LS(LA(LC(F17))))
#define WM_NG_U LG(LS(LA(LC(F18))))
#define WM_NG_D LG(LS(LA(LC(F19))))

// MacOS
#define MAC_DND F16
#define MAC_DICT F17
#define MAC_SPOT F18

// MISC
#define SEL_ALL LG(A)
#define UNDO_KEY LG(Z)

// Homerow Mods
/ {
  behaviors {
    hm: home_row_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ROW_MODS";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <125>;
      global-quick-tap;
      bindings = <&kp>, <&kp>;
    };
    /* ALT HOME ROW MODS
    hm: home_row_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOME_ROW_MODS";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <280>;
      quick-tap-ms = <0>;
      bindings = <&kp>, <&kp>;
    };
    */
    bspc_del: backspace_delete {
      compatible = "zmk,behavior-mod-morph";
      label = "BACKSPACE_DELETE";
      #binding-cells = <0>;
      bindings = <&kp BACKSPACE>, <&kp DELETE>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
      keep-mods = <(MOD_RSFT)>;
    };
    hyphen: hyphen_tap_dance {
      compatible = "zmk,behavior-tap-dance";
      label = "HYPHEN_TAP_DANCE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp MINUS>, <&kp LA(MINUS)>, <&kp LS(LA(MINUS))>;
    };
    dev_switch: bluetooth_dev_switch {
      compatible = "zmk,behavior-tap-dance";
      label = "BLUETOOTH_DEVICE_SWITCH";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&bt BT_SEL 0>, <&bt BT_SEL 1>, <&bt BT_SEL 2>;
    };
    capture: cleanshot_capture {
      compatible = "zmk,behavior-tap-dance";
      label = "CLEANSHOT_CAPTURE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LG(LS(N4))>, <&kp LG(LS(N3))>, <&kp LG(LS(N6))>;
    };
    ha_ctrl: home_assistant_control {
      compatible = "zmk,behavior-tap-dance";
      label = "HOME_ASSISTANT_CONTROL";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp MEH(B)>, <&kp MEH(C)>, <&kp MEH(X)>;
    };
  };
};

// / {
//   combos {
//     compatible = "zmk,combos";
//     combo_copy {
//       timeout-ms = <40>;
//       key-positions = <LB2 LB3>;
//       bindings = <$kp LG(C)>;
//     };
//     combo_cut {
//       timeout-ms = <40>;
//       key-positions = <LB3 LB4>;
//       bindings = <$kp LG(X)>;
//     };
//     combo_paste {
//       timeout-ms = <40>;
//       key-positions = <LB1 LB2>;
//       bindings = <$kp LG(V)>;
//     };
//   }
// };

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = "Base";
      bindings = <
        // ╭─DEFAULT─────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P         &bspc_del
             &kp ESC       &hm LGUI A    &hm LSHFT S   &hm LALT D    &hm LCTRL F   &kp G             &kp H         &hm RCTRL J   &hm RALT K    &hm RSHFT L   &hm RGUI SEMI &kp SQT
             &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RET
        // ╰─────────────┴─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────┴─────────────╯
                                                       &kp MGMT      &mo LOWER     &mo NAV           &kp SPC       &mo RAISE     &kp RALT
        //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
    lower_layer {
      label = "Lower";
      bindings = <
        // ╭─LOWER───────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp A_PREV    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        ___
             &kp SEL_ALL   &kp N6        &kp N7        &kp N8        &kp N9        &kp N0            ___           ___           ___           ___           ___           ___           
             ___           &kp UNDO_KEY  ___           &capture      ___           &ha_ctrl          ___           ___           ___           ___           ___           ___           
        // ╰─────────────┴─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────┴─────────────╯
                                                       ___           ___           ___               ___           &mo ADJ    ___
        //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
    raise_layer {
      label = "Raise";
      bindings = <
        // ╭─RAISE───────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             ___           &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR      ___
             ___           ___           ___           ___           ___           ___               &kp PIPE      &hyphen       &kp EQUAL     &kp LBKT      &kp RBKT      &kp GRAVE
             ___           ___           ___           ___           ___           ___               &kp BSLH      &kp UNDER     &kp PLUS      &kp LBRC      &kp RBRC      &kp TILDE
        // ╰─────────────┴─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────┴─────────────╯
                                                       ___           &mo ADJ    ___               ___           ___           ___
        //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
    adjust_layer {
      label = "Adjust";
      bindings = <
        // ╭─ADJUST──────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp C_BRI_UP  &kp C_BRI_DN  &kp WM_MCTRL  &kp MAC_SPOT  &kp MAC_DICT  &kp MAC_DND       ___           &kp C_MUTE    &kp C_VOL_UP  &kp C_VOL_UP  ___           ___
             &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6            &bt BT_CLR    &kp C_PREV    &kp C_PP      &kp C_NEXT    ___           ___
             &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12           &dev_switch   ___           ___           ___           ___           ___
        // ╰─────────────┴─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────┴─────────────╯
                                                       ___           ___           ___               ___           ___           ___
        //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
    nav_layer {
      label = "Nav";
      bindings = <
        // ╭─NAV─────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp LA(TAB)   &kp LG(LEFT) &kp LA(LEFT)   &kp UP        &kp LA(RIGHT) &kp LG(RIGHT)      ___           ___           ___           ___           ___           ___
             &kp BSPC      &kp BSPC_W   &kp LEFT       &kp DOWN      &kp RIGHT     &kp DELETE         ___           ___           ___           ___           ___           ___
            ___            &kp H_PREV   &kp H_NEXT     &kp T_PREV    &kp T_NEXT    &kp RET            ___           ___           ___           ___           ___           ___
        // ╰─────────────┴─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────┴─────────────╯
                                                       ___           ___           ___               &mo MGMT      ___           ___
        //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
    mgmt_layer {
      label = "Window Management";
      bindings = <
        // ╭─MGMT────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             ___           ___           &kp WM_WIN_L  &kp WM_WIN_X  &kp WM_WIN_R  &kp WM_4TH        ___           &kp WM_SHRK   &kp WM_NG_U   &kp WM_GROW   ___           ___
             ___           &kp WM_FOCUS  &kp WM_SN_L   &kp WM_WIN_H  &kp WM_SN_R   &kp WM_3RD        ___           &kp WM_NG_L   &kp WM_NG_D   &kp WM_NG_R   ___           ___
             ___           ___           &kp WM_ST_L   &kp WM_ST_D   &kp WM_ST_R   &kp WM_ST_UN      ___           &kp WM_STAGE  ___           ___           ___           ___
        // ╰─────────────┴─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────┴─────────────╯
                                                       ___           ___           ___               ___           ___           ___
        //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
      >;
    };
  };
};